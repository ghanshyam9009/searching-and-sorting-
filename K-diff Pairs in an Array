class Solution {
public:
    int findPairs(vector<int>& nums, int k) {
        set<pair<int,int>>ans;
        int i=0,j=1;
        sort(nums.begin(),nums.end());
        while(j<nums.size()){
            if(nums[j]-nums[i]==k){
                ans.insert({nums[i],nums[j]});
                i++;
                j++;
            }
            else if(nums[j]-nums[i]>k){
                i++;
            }
            else{
                j++;
            }
            if(i==j){
                j++;
            }
        }
        return ans.size();
    }
};




// class Solution {
//     public int findPairs(int[] nums, int k) {
        
//         if (k < 0) {
//             return 0;  // Since k is the absolute difference, it can't be negative
//         }

//         HashSet<Integer> seen = new HashSet<>();
//         HashSet<Integer> uniquePairs = new HashSet<>();

//         for (int num : nums) {
//             if (seen.contains(num - k)) {
//                 uniquePairs.add(num - k);
//             }
//             if (seen.contains(num + k)) {
//                 uniquePairs.add(num);
//             }
//             seen.add(num);
//         }

//         return uniquePairs.size();
//     }
// }


