Given an array of integers nums and an integer k, return the total number of subarrays whose sum equals to k.
A subarray is a contiguous non-empty sequence of elements within an array.

Example 1:

Input: nums = [1,1,1], k = 2
Output: 2
Example 2:

Input: nums = [1,2,3], k = 3
Output: 2



class Solution {
public:
    int subarraySum(vector<int>& nums, int k) {
        int n= nums.size();

        int prefix[n];

        prefix[0]=nums[0];

        for(int i=1;i<n;i++){
            prefix[i] = prefix[i-1]+nums[i];
        }

        unordered_map<int,int>mp;

        int ans = 0; 
        
        for(int i = 0; i < n; i++)
        {
            if(prefix[i] == k) 
                ans++;
            
            if(mp.find(prefix[i] - k) != mp.end())
            {
                ans += mp[prefix[i] - k]; 
            }
            
            mp[prefix[i]]++; 
        }
        
        return ans;
        
    }
};
