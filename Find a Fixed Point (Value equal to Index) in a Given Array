
Enter size of array: 4
Enter array = {7,1,3,2}

Output
Fixed Point: 1

Enter size of array: 5
Enter array = {1,6,9,4,10}

Output
No fixed point in the array



#include <bits/stdc++.h>
using namespace std;
int main(){
    int N;
    cout<<"Enter size of array:";
    cin>>N;
    int arr[N];
    cout<<"Enter array = ";
    for(int i=0;i<N;i++)
    {
        cin>>arr[i];
    }
    for(int i = 0; i < N; i++)
    {
        if(arr[i] == i)
        {
            cout<<"Fixed Point: " <<index<<endl;
            return 0;
        }
    }
    cout<<"No fixed point in the array \n";
    return 0;
}



// approach 2 (binary search)

#include <bits/stdc++.h>
using namespace std;

int bin_search(int arr[],int l , int h)
{
    if(l <= h)
    {
        // getting the mid element
        int mid = l + (h - l)/2;
        if(arr[mid] == mid)
        return mid;
  
        int res = -1;
        //recursively calling the function to get element
        if (mid < arr[h])
            res = bin_search(arr, (mid + 1), h);
        if (res != -1)
            return res;
        if (mid - 1 >= arr[l])
            return bin_search(arr, l, (mid - 1));
        }
    return -1;
}

int main()
{
    int n;
    cout<<"Enter size of array:";
    cin>>n;
    int arr[n];
    cout<<"Enter array = ";
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    // calling the function
    int index = bin_search(arr,0,n-1);
    if(index >=0)
        cout <<"Fixed Point: " <<index<<endl;
    else
        cout<<"No fixed point in the array \n";
    return 0;
}
