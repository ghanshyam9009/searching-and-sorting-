class Solution {
public:
    int countGoodTriplets(vector<int>& arr, int a, int b, int c) {
        int n = arr.size();
        int count = 0;
        for (int i = 0; i < n - 2; i++) {
            for (int j = i + 1; j < n - 1; j++) {
                if (abs(arr[i] - arr[j]) > a) continue;
                for (int k = j + 1; k < n; k++) {
                    if (abs(arr[j] - arr[k]) > b) continue;
                    if (abs(arr[i] - arr[k]) <= c) count++;
                }
            }
        }
        return count;
    }
};





#include<bits/stdc++.h> 
using namespace std; 

int countTriplets(int arr[], int n, int sum) 
{ 
	sort(arr, arr+n); 
	int ans = 0; 

	for (int i = 0; i < n - 2; i++) 
	{
		int j = i + 1, k = n - 1; 
		while (j < k) 
		{
			if (arr[i] + arr[j] + arr[k] >= sum) 
				k--; 

			else
			{
				ans += (k - j); 
				j++; 
			} 
		} 
	} 
	return ans; 
} 

// Driver program 
int main() 
{ 
	int arr[] = {5, 1, 3, 4, 7}; 
	int n = sizeof arr / sizeof arr[0]; 
	int sum = 12; 
	cout << countTriplets(arr, n, sum) << endl; 
	return 0; 
} 
